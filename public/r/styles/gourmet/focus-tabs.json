{
  "name": "focus-tabs",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tabs",
    "@radix-ui/react-use-controllable-state",
    "motion"
  ],
  "files": [
    {
      "path": "annui/focus-tabs.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\"\nimport { AnimatePresence, motion } from \"motion/react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { createContext } from \"@/registry/default/lib/context\"\n\nconst Tabs = React.forwardRef<\n  React.ComponentRef<typeof TabsPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Root>\n>(({ value, onValueChange, defaultValue, ...props }, ref) => {\n  const [activeTab, setActiveTab] = useControllableState({\n    prop: value,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  })\n\n  return (\n    <TabsProvider value={{ activeTab, setActiveTab }}>\n      <TabsPrimitive.Root\n        ref={ref}\n        value={activeTab}\n        onValueChange={setActiveTab}\n        {...props}\n      />\n    </TabsProvider>\n  )\n})\nTabs.displayName = TabsPrimitive.Root.displayName\n\nconst TabsList = React.forwardRef<\n  React.ComponentRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, children, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 items-center justify-center gap-2\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </TabsPrimitive.List>\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ComponentRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, children, value, ...props }, ref) => {\n  return (\n    <TabProvider value={{ value }}>\n      <TabsPrimitive.Trigger\n        ref={ref}\n        className={cn(\n          \"group h-full inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground\",\n          className\n        )}\n        value={value}\n        {...props}\n      >\n        {children}\n      </TabsPrimitive.Trigger>\n    </TabProvider>\n  )\n})\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsTriggerIcon = React.forwardRef<\n  React.ComponentRef<\"span\">,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    className={cn(\"[&>svg]:w-4 [&>svg]:h-4\", className)}\n    {...props}\n  />\n))\nTabsTriggerIcon.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsTriggerText = React.forwardRef<\n  React.ComponentRef<typeof motion.div>,\n  React.ComponentPropsWithoutRef<typeof motion.div> & {\n    children?: React.ReactNode\n  }\n>(({ className, children, ...props }, ref) => {\n  const { activeTab } = useTabsContext()\n  const { value } = useTabContext()\n\n  const isActive = value === activeTab\n\n  const variants = {\n    initial: {\n      width: 0,\n      opacity: 0,\n    },\n    animate: { width: \"auto\", opacity: 1 },\n  }\n\n  return (\n    <AnimatePresence initial={false}>\n      {isActive && (\n        <motion.div\n          ref={ref}\n          variants={variants}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"initial\"\n          transition={{ duration: 0.4, type: \"spring\", bounce: 0 }}\n          className={cn(\"overflow-hidden\", className)}\n          {...props}\n        >\n          <span className=\"ml-1\">{children}</span>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n})\nTabsTriggerText.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ComponentRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\ninterface TabsContextValue {\n  activeTab: string | undefined\n  setActiveTab: (value: string) => void\n}\n\ninterface TabContextValue {\n  value: string | undefined\n}\n\nconst [TabsProvider, useTabsContext] = createContext<TabsContextValue>({\n  activeTab: undefined,\n  setActiveTab: () => {},\n})\n\nconst [TabProvider, useTabContext] = createContext<TabContextValue>({\n  value: undefined,\n})\n\nexport {\n  Tabs,\n  TabsList,\n  TabsContent,\n  TabsTrigger,\n  TabsTriggerText,\n  TabsTriggerIcon,\n}\n\nexport { useTabsContext, useTabContext }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}