{
  "name": "dropdown-menu-00",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-dropdown-menu"
  ],
  "files": [
    {
      "path": "annui/dropdown-menu-00.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { ChevronRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuSeparator = DropdownMenuPrimitive.Separator\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ComponentRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, children, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        \"shadow-none p-2 rounded-lg w-64\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </DropdownMenuPrimitive.Content>\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ComponentRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      \"hover:bg-primary/10 h-14 group flex-col items-start justify-center gap-0 rounded-lg cursor-pointer\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <div className=\"absolute right-2 text-primary [&>svg]:w-4 [&>svg]:h-4 opacity-0 group-hover:opacity-100 -translate-x-2 group-hover:translate-x-0 transition-all duration-200\">\n      <ChevronRight />\n    </div>\n  </DropdownMenuPrimitive.Item>\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuItemIcon = React.forwardRef<\n  React.ComponentRef<\"span\">,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, children, ...props }, ref) => (\n  <span\n    ref={ref}\n    className={cn(\n      \"absolute flex items-center justify-center size-10 rounded-lg transition-colors duration-200 left-2 mr-2 bg-primary/10 text-primary group-hover:bg-primary group-hover:text-primary-foreground [&>svg]:w-5 [&>svg]:h-5\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </span>\n))\nDropdownMenuItemIcon.displayName = \"DropdownMenuItemIcon\"\n\nconst DropdownMenuItemTitle = React.forwardRef<\n  React.ComponentRef<\"h3\">,\n  React.ComponentPropsWithoutRef<\"h3\">\n>(({ className, children, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"pl-12 text-sm font-medium group-hover:text-primary transition-colors duration-200\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </h3>\n))\nDropdownMenuItemTitle.displayName = \"DropdownMenuItemTitle\"\n\nconst DropdownMenuItemDescription = React.forwardRef<\n  React.ComponentRef<\"p\">,\n  React.ComponentPropsWithoutRef<\"p\">\n>(({ className, children, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\n      \"pl-12 text-xs text-muted-foreground group-hover:text-primary transition-colors duration-200\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </p>\n))\nDropdownMenuItemDescription.displayName = \"DropdownMenuItemDescription\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuItemIcon,\n  DropdownMenuItemTitle,\n  DropdownMenuItemDescription,\n  DropdownMenuSeparator,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}