{
  "name": "detail-panel",
  "type": "registry:ui",
  "dependencies": [
    "motion",
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "annui/detail-panel.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\n\nconst DetailPanel = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"bg-card p-4 flex flex-col gap-6\", className)}\n      {...props}\n    >\n      {children}\n    </Comp>\n  )\n})\nDetailPanel.displayName = \"DetailPanel\"\n\nconst DetailPanelHeader = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp ref={ref} className={cn(\"flex flex-col gap-2\", className)} {...props}>\n      {children}\n    </Comp>\n  )\n})\nDetailPanelHeader.displayName = \"DetailPanelHeader\"\n\nconst DetailPanelHeaderTitle = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp ref={ref} className={cn(\"text-lg font-medium\", className)} {...props}>\n      {children}\n    </Comp>\n  )\n})\nDetailPanelHeaderTitle.displayName = \"DetailPanelHeaderTitle\"\n\nconst DetailPanelHeaderActions = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"flex flex-wrap gap-2\", className)}\n      {...props}\n    >\n      {children}\n    </Comp>\n  )\n})\nDetailPanelHeaderActions.displayName = \"DetailPanelHeaderActions\"\n\nconst DetailPanelHeaderAction = React.forwardRef<\n  React.ComponentRef<\"button\">,\n  React.ComponentPropsWithoutRef<\"button\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\n        \"group hover:bg-primary/10 transition-colors duration-200 flex gap-1 border-primary/30 border-dashed border rounded-full px-1.5 text-sm font-medium h-[22px] [&>svg]:h-[14px] [&>svg]:w-[14px] [&>span]:h-[14px] [&>span]:w-[14px] items-center\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Comp>\n  )\n})\nDetailPanelHeaderAction.displayName = \"DetailPanelHeaderAction\"\n\nconst DetailPanelSection = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"flex flex-col gap-1.5\", className)}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n})\nDetailPanelSection.displayName = \"DetailPanelSection\"\n\nconst DetailPanelSectionTitle = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"text-sm font-medium\", className)} {...props}>\n      {children}\n    </div>\n  )\n})\nDetailPanelSectionTitle.displayName = \"DetailPanelSectionTitle\"\n\nconst DetailPanelSectionDescription = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div className={cn(\"text-sm text-muted-foreground\", className)}>\n      {children}\n    </div>\n  )\n})\nDetailPanelSectionDescription.displayName = \"DetailPanelSectionDescription\"\n\nconst DetailPanelSectionContent = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return <div className={cn(className)}>{children}</div>\n})\nDetailPanelSectionContent.displayName = \"DetailPanelSectionContent\"\n\nconst DetailPanelProperties = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"grid gap-2\", className)} {...props}>\n      {children}\n    </div>\n  )\n})\nDetailPanelProperties.displayName = \"DetailPanelProperties\"\n\nconst DetailPanelProperty = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { labelWidth?: string }\n>(({ children, className, labelWidth = \"100px\", ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"grid grid-cols-[minmax(0,var(--label-width))_1fr] items-center gap-4\",\n        className\n      )}\n      style={{ \"--label-width\": labelWidth } as React.CSSProperties}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n})\nDetailPanelProperty.displayName = \"DetailPanelProperty\"\n\nconst DetailPanelPropertyLabel = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"text-sm text-muted-foreground truncate\", className)}\n      {...props}\n    />\n  )\n})\nDetailPanelPropertyLabel.displayName = \"DetailPanelPropertyLabel\"\n\nconst DetailPanelPropertyValue = React.forwardRef<\n  React.ComponentRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { asChild?: boolean }\n>(({ children, className, asChild, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp ref={ref} className={cn(\"text-sm font-medium\", className)} {...props}>\n      {children}\n    </Comp>\n  )\n})\nDetailPanelPropertyValue.displayName = \"DetailPanelPropertyValue\"\n\nexport {\n  DetailPanel,\n  DetailPanelHeader,\n  DetailPanelHeaderTitle,\n  DetailPanelHeaderActions,\n  DetailPanelHeaderAction,\n  DetailPanelSection,\n  DetailPanelSectionTitle,\n  DetailPanelSectionDescription,\n  DetailPanelSectionContent,\n  DetailPanelProperties,\n  DetailPanelProperty,\n  DetailPanelPropertyLabel,\n  DetailPanelPropertyValue,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}